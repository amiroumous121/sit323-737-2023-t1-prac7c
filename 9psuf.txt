https://collabedit.com/9psuf

-------------------------------
createPersistentVolume.yaml


apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  local:
    path: /run/desktop/mnt/host/c/sit323_737-2023-t1-prac2p/Week6/MyMappedFolder
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop
                
                
kubectl apply -f createPersistentVolume.yaml
kubectl get pv

------------------------------------

createPersistentVolumeClaim.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: "demo-storage"
  
kubectl apply -f createPersistentVolumeClaim.yaml
kubectl get pvc

kubectl delete pvc mongo-pvc

-------------------------
kubectl delete pvc mongo-pvc
kubectl delete pv mongo-pv

createStorageClass.yaml

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: demo-storage
provisioner: docker.io/hostpath
volumeBindingMode: Immediate
reclaimPolicy: Delete


kubectl apply -f createStorageClass.yaml
kubectl get sc
kubectl apply -f createPersistentVolumeClaim.yaml

---------------------------------------

createDeployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          args: ["--dbpath", "/data/db"]
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "admin"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "password"
          volumeMounts:
            - mountPath: /data/db
              name: mongo-volume
      volumes:
        - name: mongo-volume
          persistentVolumeClaim:
            claimName: mongo-pvc
            
kubectl apply -f createDeployment.yaml



